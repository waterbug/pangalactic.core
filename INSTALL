Installing the Pan Galactic Engineering Framework (pangalactic)
===============================================================

Platform Notes
--------------

* The pangalactic Desktop Client (``pangalaxian.py``) should run on any
  OS for which its dependencies can be installed; it has been tested on Windows
  7 and 10, Linux (mainly Ubuntu), and OSX.

* The Virtual Galactic Engineering Repository (VGER) server (``vgerd``) is only
  supported on Linux.

-------------------------------------------------------------------------------


Dependencies
------------

pangalactic depends on several libraries and other applications.  This section
specifies the software required and where to obtain it.

All of the following software is free and open source.

NOTE:  Use of the "conda" package manager is *strongly* recommended.  Unless
the full Anaconda distribution (https://www.continuum.io/downloads) is required
for some other application or is already installed, the recommended practice is
to install "Miniconda" (http://conda.io/miniconda.html), which will set up the
"conda" package manager and a minimal set of associated libraries.

(0) Python requirements:

    - Python == 3.6 (preferred)
      -OR- 
      Python >= 2.7.11
      NOTE:  2.7.11 introduced the capability to identify the "Windows-10"
      platform -- that capability is required.

          Configuration:  Python has binary installers for several platforms
          and can also be compiled and installed from source, but the
          recommended practice is to use the Python binary that Miniconda
          installs.  Be sure to install it configured with SSL support, as this
          is used by pangalactic (see instructions included with the Python
          distribution -- if you install from source, OpenSSL is required).

(1) Dependencies of pangalactic.core (base package):

    - future
      Python 2 / 3 compatibility functions / aliases

          Configuration:  'conda install future'

    - inflect
      Nuanced capitalization
      * NOTE:  not in the default conda channel, use 'conda-forge' channel

          Configuration:  'conda install inflect'

    - pint
      Units and quantities

          Configuration:  'conda install pint'

    - python-dateutil
      Date utilities (also is a dependency of matplotlib, which is used in
      pangalactic.node)

          Configuration:  'conda install python-dateutil'

    - pytz (latest released version)
      Correct timezones implementation
      * NOTE: is in the 'default' conda channel

          Configuration:  'conda install pytz'

    - RDFlib (version 3.0.0 or greater)
      <http://rdflib.net/>
      * NOTE:  not in the default conda channel, use 'conda-forge' channel

          Configuration:  'conda install rdflib'

    - ruamel_yaml <=0.15
      * NOTE: the pin to under 0.15 is recommended by the package for
        "production" use (possibly unstable API changes) currently, this
        results in conda installing version 0.11.14
      * NOTE: conda pkg is in the 'default' conda channel

          Configuration:  'conda install ruamel_yaml'

    - SqlAlchemy
      <http://www.sqlalchemy.org>
      * NOTE: is in the 'default' conda channel

          Configuration:  'conda install sqlalchemy'

    - tzlocal (latest released version)
      Local timezones implementation
      * NOTE: is in the conda-forge channel

          Configuration:  'conda install tzlocal'

    - unidecode (latest released version)
      ASCII transliterations of Unicode text
      * NOTE: is in the 'default' conda channel

          Configuration:  'conda install unidecode'

    - xlrd
      Reads .xls files
      * NOTE: is in the 'default' conda channel

          Configuration:  'conda install xlrd'

    - xlsxwriter (latest released version)
      Writes .xlsx files

          Configuration:  'conda install xlsxwriter'

    - xlwt
      Writes .xls files
      * NOTE: is in the 'default' conda channel

          Configuration:  'conda install xlwt'


(2) Dependencies of pangalactic.node (the pangalactic GUI client package):

    - autobahn
      * NOTE: use 'conda-forge' channel

          Configuration:  'conda install autobahn'

    - binaryornot (conda-forge)
      Detects whether a file is binary, and certain types of files

          Configuration:  'conda install binaryornot'

    - future
      Python 2 / 3 compatibility functions / aliases

          Configuration:  'conda install future'

    - jpeg >=9b
      * NOTE: version 9b is in the 'default' conda channel

    - ** openjpeg >=2.3.0
      * NOTE: version 2.3.0 is in the 'conda-forge' channel
      ** NOTE: openjpeg appears to be unnecessary in python 3 versions

    - pyqt =5.6.0
      [until we figure out why 5.9 causes diagram double-click problem]
      * NOTE: use the 'default' conda channel -- this is especially important
        on Windows, where the 'conda-forge' channel versions of 'sip' do not
        work with the default channel versions and will cause failures (this
        may require commenting out the conda-forge channel in your .condarc
        while installing pyqt)

          Configuration:  'conda install pyqt=5.6.0'

    - pillow <=4.1.1   # 4.2.x is broken
      Python Imaging Library (PIL) (latest released version)
      * NOTE: implemented as "pillow"
      * NOTE: is in the 'default' conda channel

          Configuration:  'conda install pillow'

    - matplotlib
      * NOTE: is in the 'default' conda channel

          Configuration:  'conda install matplotlib'

    - Twisted
      Asynchronous networking framework
      <http://twistedmatrix.com>
      * NOTE: is in the 'default' conda channel

          Configuration:  'conda install twisted'

    - qt5reactor
      Integration of twisted reactor with PyQt5 event loop
      * NOTE: not in the default conda channel, use locally built conda pkg

          Configuration:  'conda install qt5reactor'

    - louie (latest released version -- "Louie-latest" on PyPI**)
      Python application event signals
      * NOTE: not in the default conda channel, use locally built conda pkg
      ** NOTE:  the imported pkg is "louie", as is the locally-built conda
                package

          Configuration:  'conda install louie'

    - pythonocc-core
      (for CAD viewer functionality)
      * NOTE: not in the default conda channel, use 'dlr-sc' channel

          Configuration: 'conda install pythonocc-core'


(3) Required for VGER (repository service):

    The items in (1) *plus* the following packages ...

    - PostgreSQL 7.4.x or later (8.x is recommended)
      <http://www.ca.postgresql.org>
      * NOTE: is in the 'default' conda channel

          Configuration Options:  see PostgreSQL documentation for detailed
          instructions.  Since PostgreSQL will only be accessed internally
          to the VGER server, security will be significantly improved on
          platforms that support unix domain sockets by setting the
          PostgreSQL server to listen on a unix domain socket.

          *** IMPORTANT:  when running initdb, set environment variables
          ``LC_COLLATE`` and ``LC_CTYPE`` to ``C``, so that PostgreSQL will be
          able to use its indexes in LIKE and regexp queries (see the
          PostgreSQL admin docs for more info).

    - psycopg2 (latest version)
      <http://initd.org/pub/software/psycopg/>
      (Note:  current development is using psycopg2-2.0.6)
      * NOTE: is in the 'default' conda channel

          Configuration:  'python setup.py install'

    - bcrypt
      [used by authenticator.py to hash passwords]

        Configuration: 'conda install bcrypt'

(4) Optional

    - pyparsing
      * NOTE:  pyparsing is a dependency of rdflib and will be installed by it

      Used in p.utils.io.part21, a STEP Part 21 file parser that is not
      currently referenced by any active modules.  (May be replaced by
      'parsley' at some point)

          Configuration:  'pip install pyparsing'

(5) Deprecated packages (used in earlier versions)

    - pandas -- inactive:  dependency removed at 0.1.dev87

    - pytables -- inactive:  dependency removed at 0.1.dev87

---------------------------------------------------------------------------

